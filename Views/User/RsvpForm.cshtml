@model Wedding_RSVP.Models.ViewModels.UserAttendeesViewModel
@{
   ViewData["Title"] = "RSVP";
}

<div class="rsvp">
   <br />
   <form class="rsvp-form form" asp-action="RsvpForm" method="post">
      <table class="rsvp-table table">
         <tr>
            <td>
               <span class="tf-header">@Html.DisplayNameFor(model => model.User.FirstName)</span>
               <div><input asp-for="@Model.User.FirstName" placeholder="@Html.DisplayNameFor(model => model.User.FirstName) (Required)" /></div>
               <span asp-validation-for="@Model.User.FirstName" class="text-danger"></span>
            </td>
         </tr>
         <tr>
            <td>
               <span class="tf-header">@Html.DisplayNameFor(model => model.User.LastName)</span>
               <div><input asp-for="@Model.User.LastName" placeholder="@Html.DisplayNameFor(model => model.User.LastName) (Required)" /></div>
               <span asp-validation-for="@Model.User.LastName" class="text-danger"></span>
            </td>
         </tr>
         <tr>
            <td>
               <span class="tf-header">@Html.DisplayNameFor(model => model.User.Email)</span>
               <div><input asp-for="@Model.User.Email" placeholder="@Html.DisplayNameFor(model => model.User.Email) (Required)" /></div>
               <span asp-validation-for="@Model.User.Email" class="text-danger"></span>
            </td>
         </tr>
         <tr>
            <td>
               <span class="tf-header">Number of Attendees (Max of 5)</span>
               <div class="attendees-input">
                  <!-- Using TextBoxFor forces ASP.NET to use a text input instead of a number input -->
                  @Html.TextBoxFor(model => model.User.NumAttendees, new { @readonly=true })
                  <div class="inc-dec">
                     <button id="inc">
                        <span><i class="fa-solid fa-plus"></i></span>
                     </button>
                     <button id="dec">
                        <span><i class="fa-solid fa-minus"></i></span>
                     </button>
                  </div>
               </div>
               <span asp-validation-for="@Model.User.NumAttendees" class="text-danger"></span>
            </td>
         </tr>
         <tr id="after-attendees">
            <td>
               <span class="tf-header">Song Request</span>
               <div><input asp-for="@Model.User.SongRequest" type="text" placeholder="Song Request (Optional)" /></div>
            </td>
         </tr>
         <tr>
            <td>
               <span class="tf-header">Anything You'd Like us to Know</span>
               <div><textarea asp-for="@Model.User.OtherInfo" placeholder="Anything You'd Like us to Know (Optional)"></textarea></div>
            </td>
         </tr>
         <tr>
            <td>
               <input id="submit" class="decline-btn btn btn-primary" type="submit" value="Decline" />
               <input id="submit" class="confirm-btn btn btn-primary" type="submit" value="Accept" />
            </td>
         </tr>
      </table>
   </form>
</div>

@section Scripts {
   <!-- JQuery 1.8.3, recieved from Google CDN -->
   <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
   <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
   <script src="https://code.jquery.com/jquery-3.3.1.min.js" integrity="sha384-tsQFqpEReu7ZLhBV2VZlAu7zcOV+rXbYlF2cqB8txI/8aZajjp4Bqd+V6D5IgvKT" crossorigin="anonymous"></script>
   <script src="~/js/attendees-incdec.js"></script>
   @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
