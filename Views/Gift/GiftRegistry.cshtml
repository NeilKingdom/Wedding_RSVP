@model Wedding_RSVP.Models.ViewModels.UserGiftViewModel
@{
   ViewData["Title"] = "Gift Registry";
}

<div class="registry">
   <h1>Gift Registry</h1>
   <h6>See the <a href="~/Home/Index/#faq"><u>FAQ</u></a> for more information on the gift registry</h6>
   <br />
   @if (Model.Gifts != null && Model.Gifts.Count() > 0)
   {
      <div class="gifts-list">
         @foreach (var gift in Model.Gifts)
         {
            if (gift.Available)
            {
               string imageSrc = Url.Content(gift.ImgUrl);
               <div class="gift-container">
                  <div class="tn-container">
                     <img class="thumbnail" src="@imageSrc" />
                     <span class="enlarge-text enlarge-text-hidden"><b>Enlarge</b>&nbsp;
                        <i class="fa-solid fa-magnifying-glass"></i>
                     </span>
                  </div>
                  <a href="@gift.SiteUrl">Go to Website</a>
                  @gift.Desc<br />
                  @string.Format("${0:0.00}", gift.EstPrice)
               </div>
            }
         }
      </div>
      <a href="javascript:history.back()">Back</a>
      <input id="submit" class="btn btn-primary" type="submit" value="Continue" />
   }
   else
   {
      <h5>No Gifts have been added to the registry</h5>
   }
</div>

@section Scripts {
   <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
	<script>
      $(document).ready(function() {
         var $giftContainers = $(".gift-container");
         var $tnEnlargeText = $(".enlarge-text");

         /*
            Initialize map of <k:v> pairs where each key is a gift and value is
            whether or not it's been clicked
         */
         var map = new Map();
         $giftContainers.each((it) => {
            map.set(it, false);
         });
         var numChecked = 0;

         $(".tn-container").hover(function() { // On mouse enter
            $(this).children(".enlarge-text").removeClass("enlarge-text-hidden");
            $(this).children(".thumbnail").addClass("img-opaque");
         }, function() { // On mouse leave
            $(this).children(".enlarge-text").addClass("enlarge-text-hidden");
            $(this).children(".thumbnail").removeClass("img-opaque");
         });

         // Call this when the number of checked boxes is 0, otherwise all items will appear disabled
         function clearDisabled() {
            $giftContainers.each(function() {
               // Remove disabled classes
               $(this).removeClass("text-muted");
               $(this).children(".thumbnail").removeClass("img-opaque");
            });
         }

         $giftContainers.click(function() {
            // If not checked
            if (map.get($(this)) === false)
            {
               map.set($(this), true);
               numChecked++;
            } else {
               map.set($(this), false);
               numChecked--;
            }

            $giftContainers.each(function() {
               // Alter CSS of non-checked elements to make them appear disabled
               if (map.get($(this)) === false) {
                  $(this).addClass("text-muted");
                  $(this).children(".thumbnail").addClass("img-opaque");
               } else {
                  $(this).removeClass("text-muted");
                  $(this).children(".thumbnail").removeClass("img-opaque");
               }
            });

            if (numChecked === 0)
            {
               clearDisabled();
            }
         });
      });
	</script>
}
